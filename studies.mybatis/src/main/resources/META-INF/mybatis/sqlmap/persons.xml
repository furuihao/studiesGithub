<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="person">
	<!-- id:标识映射文件中的SQL 将Sql语句封装到mappedStatment对象中，所以将Id称为Statment的Id parameterType：指定Sql语句的输入参数类型 
		#{}:表示一个占位符 #{id}:其中的id表示接收输入的参数，参数名称就是id，如果输入的参数类型是简单类型， #{}中的参数名可以任意 resultType:指定sql输出结果所映射的Java对象，Select指定resultType表示将单条记录映射成的Java对象 -->
	<select id="findPersonByid" parameterType="int"
		resultType="com.hao.studies.mybatis.models.Person">
		select * from persons where id= #{id}
	</select>

	<!-- ${}:表示拼接Sql串，将接收到的参数拼接到Sql语句中 ，会引起Sql注入安全隐患,不建议使用 ${value}:接收输入参数的内容，如果输入的是简单类型，${value}只能是value -->
	<select id="findPersonLikeName" parameterType="java.lang.String"
		resultType="com.hao.studies.mybatis.models.Person">
		select * from persons where name like '%${value}%'
	</select>

	<insert id="insert" parameterType="com.hao.studies.mybatis.models.Person">
		<!-- 在插入数据之后，查询数据库自增主键值 -->
		<!-- keyProperty：指定parameterType类型中，存放自增主键值的属性 -->
		<!-- resultType：指定selectKey返回值的类型 -->
		<!-- order：指定select last_insert_id()，执行的顺序是在Insert语句之后的 -->
		<selectKey keyProperty="id" resultType="java.lang.Integer"
			order="AFTER">
			select last_insert_id()
		</selectKey>
		INSERT INTO `persons` (`name`, `age`) VALUES ( #{name}, #{age})
	</insert>

	<delete id="deleteById" parameterType="int">
		delete from persons where
		id=#{id}
	</delete>

	<update id="updateById" parameterType="com.hao.studies.mybatis.models.Person">
		update persons set `name`=#{name},`age`=#{age} where id=#{id}
	</update>

</mapper>